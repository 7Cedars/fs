{"ast":null,"code":"var _jsxFileName = \"/home/teijehidde/Documents/7CedarsGit/learning/fs/part1/unicafe/unicafe-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n_c = Button;\nconst StatisticsLine = props => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", props.text, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", props.value, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n_c2 = StatisticsLine;\nconst Statistics = props => {\n  let allRatings = props.good + props.neutral + props.bad;\n  let averagelRatings = (props.good + -props.bad) / allRatings;\n  let positiveRatings = props.good / allRatings;\n  if (allRatings === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback has been given.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"Good\",\n      value: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"Neutral\",\n      value: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"Bad\",\n      value: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"All\",\n      value: allRatings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"Average\",\n      value: averagelRatings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"Positive\",\n      value: positiveRatings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n_c3 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticsLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","handleClick","text","StatisticsLine","props","value","Statistics","allRatings","good","neutral","bad","averagelRatings","positiveRatings","App","setGood","setNeutral","setBad","handleGoodClick","handleNeutralClick","handleBadClick"],"sources":["/home/teijehidde/Documents/7CedarsGit/learning/fs/part1/unicafe/unicafe-app/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst StatisticsLine = (props) => {\n  return (\n      <tr>\n        <td> {props.text} </td>\n        <td> {props.value} </td>\n      </tr>\n  )\n}\n\nconst Statistics = (props) => {\n \n  let allRatings = props.good + props.neutral + props.bad\n  let averagelRatings = (props.good +-(props.bad)) / allRatings\n  let positiveRatings = props.good / allRatings\n\n  if (allRatings === 0) {\n    return (\n      <div>\n        No feedback has been given.  \n      </div>\n    )\n\n  }\n\n    return (\n      <table>\n        <StatisticsLine text='Good' value={props.good} /> \n        <StatisticsLine text='Neutral' value={props.neutral} /> \n        <StatisticsLine text='Bad' value={props.bad} /> \n        <StatisticsLine text='All' value={allRatings} /> \n        <StatisticsLine text='Average' value={averagelRatings} /> \n        <StatisticsLine text='Positive' value={positiveRatings} /> \n      </table>\n    )\n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    setGood(good + 1)\n  }\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1)\n  }\n\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n\n  return (\n    <div>\n      <h1>\n        Give Feedback\n      </h1>\n      <Button handleClick={handleGoodClick} text='good' />\n      <Button handleClick={handleNeutralClick} text='neutral' />\n      <Button handleClick={handleBadClick} text='bad' />\n      <h1>\n        Statistics\n      </h1>\n      <Statistics \n          good = { good} \n          neutral = { neutral} \n          bad = { bad} \n       /> \n\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}